{"version":3,"sources":["services/booking.js","services/client.js","reducers/bookingReducer.js","components/BookingForm.js","services/login.js","reducers/loginReducer.js","reducers/noticeReducer.js","components/Login.js","components/Notification.js","components/SignupForm.js","components/Navbar.js","components/BookingList.js","services/admin.js","reducers/adminReducer.js","components/AdminLogin.js","components/AdminDashboard.js","App.js","helpers/sortHelper.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","request","data","create","newObject","config","headers","Authorization","post","response","update","id","put","remove","delete","setToken","newToken","getBookingsById","clientId","requst","bookings","then","createBooking","booking","dispatch","bookingService","newBooking","type","bookingReducer","state","action","initBookings","concat","QuoteForm","user","useDispatch","useState","islLawnMowing","setIslLawnMowing","isGardening","setIsGardening","isRubbishRemove","setIsRubbishRemove","comment","setComment","address","setAddress","submitQuote","event","preventDefault","serviceSelected","filter","Boolean","map","i","item","serviceItem","onSubmit","name","checked","onChange","apiKey","googleApiKey","onPlaceSelected","place","formatted_address","options","types","fields","componentRestrictions","country","value","target","login","credentials","logout","window","localStorage","clear","userReducer","showMesssage","message","duration","setTimeout","clearTimeout","timer","noticeReducer","Login","username","setUsername","password","setPassword","handleLogin","loginService","setItem","JSON","stringify","quoteService","error","console","evt","Notification","useSelector","states","SignupForm","handleCreateUser","setName","phone","setPhone","email","setEmail","Navbar","LoginOutBtn","Button","color","onClick","component","Link","to","AppBar","position","Toolbar","QuoteList","q","date","_id","log","adminReducer","admin","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","AdminLogin","classes","useForm","handleSubmit","control","Container","maxWidth","CssBaseline","className","Typography","variant","adminService","defaultValue","render","field","TextField","required","fullWidth","label","autoComplete","autoFocus","root","media","height","AdminDashboard","weekday","year","month","day","Card","style","CardActionArea","CardContent","gutterBottom","Date","toLocaleDateString","CardActions","size","App","sortedBookings","sort","b","sortBookingsByDate","useEffect","loggedUserJSON","getItem","parse","setUser","clientService","userObj","res","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"yPACMA,EAAU,gBAEZC,EAAQ,KA4BG,GAAEC,OAvBL,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAAIL,GADnB,cACPM,EADO,yBAENA,EAAQC,MAFF,2CAAH,qDAuBYC,OAlBZ,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAgBX,IAFhB,SAIUG,IAAMS,KAAKb,EAASS,EAAWC,GAJzC,cAIPI,EAJO,yBAKNA,EAASP,MALH,2CAAH,sDAkBmBQ,OAVnB,uCAAG,WAAMC,EAAIP,GAAV,eAAAN,EAAA,sEACUC,IAAMa,IAAN,UAAcjB,EAAd,YAA0BgB,GAAMP,GAD1C,cACPK,EADO,yBAENA,EAASP,MAFH,2CAAH,wDAU0BW,OAL1B,uCAAG,WAAMF,GAAN,eAAAb,EAAA,sEACUC,IAAMe,OAAN,UAAiBnB,EAAjB,YAA6BgB,IADvC,cACPF,EADO,yBAENA,EAASP,MAFH,2CAAH,sDAKiCa,SA3B5B,SAAAC,GACfpB,EAAK,iBAAaoB,KCJdrB,EAAU,eAEVE,EAAM,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAAIL,GADnB,cACPM,EADO,yBAENA,EAAQC,MAFF,2CAAH,qDAKNe,EAAe,uCAAG,WAAMC,GAAN,eAAApB,EAAA,sEACDC,IAAMC,IAAIL,EAAO,WAAOuB,IADvB,cAChBC,EADgB,yBAEfA,EAAOjB,KAAKkB,UAFG,2CAAH,sDAoBN,GAAEvB,SAAOM,OAfZ,uCAAG,WAAMC,GAAN,eAAAN,EAAA,sEACUC,IAAMS,KAAKb,EAASS,GAD9B,cACPK,EADO,yBAENA,GAFM,2CAAH,sDAemBC,OAVhB,SAACC,EAAIP,GAElB,OADgBL,IAAMa,IAAN,UAAcjB,EAAd,YAA0BgB,GAAMP,GACjCiB,MAAK,SAAAZ,GAAQ,OAAIA,EAASP,SAQLW,OALvB,SAACF,GAEd,OADgBZ,IAAMe,OAAN,UAAiBnB,EAAjB,YAA6BgB,IAC9BU,MAAK,SAAAZ,GAAQ,OAAIA,EAASP,SAGEe,mBCgBtC,SAASK,EAAcC,GAC5B,8CAAO,WAAMC,GAAN,eAAA1B,EAAA,sEACoB2B,EAAetB,OAAOoB,GAD1C,OACCG,EADD,OAELF,EAAS,CACPG,KAAK,cACLD,eAJG,2CAAP,sDASaE,MAnDQ,WAAsB,IAArBC,EAAoB,uDAAd,GAAGC,EAAW,uCAC1C,OAAQA,EAAOH,MACf,IAAK,gBACH,OAAOG,EAAOC,aAChB,IAAK,cACH,OAAOF,EAAMG,OAAOF,EAAOJ,YAC7B,IAAK,iBACH,MAAO,GACT,QACE,OAAOG,I,wBCsGII,EA5GG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEbV,EAAWW,cAFa,EAIYC,oBAAS,GAJrB,mBAIvBC,EAJuB,KAIRC,EAJQ,OAKQF,oBAAS,GALjB,mBAKvBG,EALuB,KAKVC,EALU,OAMgBJ,oBAAS,GANzB,mBAMvBK,EANuB,KAMNC,EANM,OAOAN,mBAAS,IAPT,mBAOvBO,EAPuB,KAOdC,EAPc,OAQAR,mBAAS,IART,mBAQvBS,EARuB,KAQdC,EARc,KAUxBC,EAAW,uCAAG,WAAOC,GAAP,eAAAlD,EAAA,sDAClBkD,EAAMC,iBAEAC,EAAkB,CACtBb,GAAiB,cACjBE,GAAe,YACfE,GAAmB,mBAElBU,OAAOC,SACPC,KAAI,SAACC,GAAD,MAAQ,CAAEC,KAAMD,MAUvB9B,EAAUF,EANK,CACbkC,YAAaN,EACbP,UACAE,aAIFD,EAAW,IACXE,EAAW,IACXR,GAAiB,GACjBE,GAAe,GACfE,GAAmB,GAxBD,2CAAH,sDA2BjB,OACE,qCACE,6CACA,uBAAMe,SAAUV,EAAhB,UACE,gCACE,+CACA,+BACE,6BACE,gDAEE,uBACEW,KAAK,cACL/B,KAAK,WACLgC,QAAStB,EACTuB,SAAU,kBAAMtB,GAAkBD,WAKxC,6BACE,8DAEE,uBACEqB,KAAK,YACL/B,KAAK,WACLgC,QAASpB,EACTqB,SAAU,kBAAMpB,GAAgBD,WAKtC,6BACE,oDAEE,uBACEmB,KAAK,kBACL/B,KAAK,WACLgC,QAASlB,EACTmB,SAAU,kBAAMlB,GAAoBD,iBAO9C,6CAEE,cAAC,IAAD,CAAcoB,OAAQ3B,EAAK4B,aACzBC,gBAAiB,SAACC,GAAD,OAAWlB,EAAWkB,EAAMC,oBAC7CC,QAAS,CACPC,MAAO,CAAC,WACRC,OAAQ,CAAC,qBACTC,sBAAuB,CAAEC,QAAS,YAKxC,0CAEE,uBACEC,MAAO5B,EACPiB,SAAU,gBAAGY,EAAH,EAAGA,OAAH,OAAgB5B,EAAW4B,EAAOD,aAIhD,wBAAQ5C,KAAK,SAAb,2BCpGO,GAAE8C,MALN,uCAAG,WAAMC,GAAN,eAAA5E,EAAA,sEACWC,IAAMS,KAHf,aAG6BkE,GAD/B,cACNjE,EADM,yBAELA,EAASP,MAFJ,2CAAH,uDCwBJ,SAASyE,IAEd,OADAC,OAAOC,aAAaC,QACb,CACLnD,KAAM,UAaKoD,MAvCK,WAA2B,IAA1BlD,EAAyB,uDAAjB,KAAMC,EAAW,uCAC5C,OAAQA,EAAOH,MACf,IAAK,QACH,OAAOG,EAAOI,KAChB,IAAK,SACH,OAAO,KACT,QACE,OAAOL,ICDEmD,EAAe,SAAEC,EAASC,GAErC,OAAO,SAAA1D,GACLA,EAAS,CACPG,KAAM,cACNsD,YAGFE,YAAW,WACT3D,EAAS,CACPG,KAAK,cACLsD,QAAQ,SAED,IAATC,GACFE,aAfAC,aAmBWC,EA5BO,WAA6B,IAA3BzD,EAA0B,uDAAlB,KAAMC,EAAY,uCAChD,OAASA,EAAOH,MAChB,IAAK,cACH,OAAOG,EAAOmD,QAChB,QACE,OAAOpD,IC0CI0D,EA1CD,WAEZ,IAAM/D,EAAWW,cAFC,EAKcC,mBAAS,IALvB,mBAKXoD,EALW,KAKDC,EALC,OAMcrD,mBAAS,IANvB,mBAMXsD,EANW,KAMDC,EANC,KAQZC,EAAc,SAAC,GAAwB,IAAnBlB,EAAkB,oBAC1C,IACElD,EFAC,SAAekD,GACpB,8CAAO,WAAMlD,GAAN,eAAA1B,EAAA,sEACc+F,EAAapB,MAAMC,GADjC,cACCxC,EADD,OAEL0C,OAAOC,aAAaiB,QAAQ,aAAcC,KAAKC,UAAU9D,IACzD+D,EAAalF,SAASmB,EAAKtC,OAHtB,kBAIE4B,EAAS,CACdG,KAAK,QACLO,UANG,2CAAP,sDEDauC,CAAMC,IACflD,EAASwD,EAAa,uBAAuB,IAE7C,MAAOkB,GACPC,QAAQD,MAAMA,KAGlB,OACE,qCACE,uCACA,uBAAMzC,SAAU,SAAC2C,GACfA,EAAInD,iBACJ2C,EAAY,CAAEJ,WAASE,cAFzB,UAIE,6CACY,uBACRnB,MAASiB,EACT5B,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBiB,EAAYjB,EAAOD,aAGlD,6CACY,uBACRA,MAASmB,EACT9B,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBmB,EAAYnB,EAAOD,aAElD,kDC5BO8B,EATK,WAClB,IAAMpB,EAAUqB,aAAY,SAAAC,GAAM,OAAIA,EAAOtB,WAC7C,OACE,mCACGA,KCsEQuB,EA3EI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAAuB,EAGXrE,mBAAS,IAHE,mBAGpCoD,EAHoC,KAG1BC,EAH0B,OAIXrD,mBAAS,IAJE,mBAIpCsD,EAJoC,KAI1BC,EAJ0B,OAKnBvD,mBAAS,IALU,mBAKpCsB,EALoC,KAK9BgD,EAL8B,OAMbtE,mBAAS,IANI,mBAMpCS,EANoC,KAM3BC,EAN2B,OAOjBV,mBAAS,IAPQ,mBAOpCuE,EAPoC,KAO7BC,EAP6B,OAQjBxE,mBAAS,IARQ,mBAQpCyE,EARoC,KAQ7BC,EAR6B,KAY3C,OACE,qCACE,yCAEA,uBAAMrD,SAAU,SAAC2C,GACfA,EAAInD,iBACJwD,EAAiB,CAAEjB,WAASE,WAAShC,OAAKb,UAAQ8D,QAAME,WAF1D,UAKE,4CAEE,uBACEtC,MAASiB,EACT5B,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBiB,EAAYjB,EAAOD,aAIlD,4CAEE,uBACEA,MAASmB,EACT9B,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBmB,EAAYnB,EAAOD,aAIlD,wCAEE,uBACEA,MAASb,EACTE,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBkC,EAAQlC,EAAOD,aAI9C,2CAEE,uBACEA,MAAS1B,EACTe,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgB1B,EAAW0B,EAAOD,aAIjD,yCAEE,uBACEA,MAASoC,EACT/C,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBoC,EAASpC,EAAOD,aAI/C,yCAEE,uBACEA,MAASsC,EACTjD,SAAW,gBAAGY,EAAH,EAAGA,OAAH,OAAgBsC,EAAStC,EAAOD,aAG/C,oD,2CC9DO,SAASwC,EAAT,GAA2B,IAAT7E,EAAQ,EAARA,KAEzBV,EAAWW,cAQX6E,EAAc,kBAClB9E,EACE,cAAC+E,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAPnC3F,EAASmD,KACTnD,ERGI,CACJG,KAAK,wBQHLH,EAASwD,EAAa,wBAAwB,KAK5C,oBAIA,cAACiC,EAAA,EAAD,CAAQC,MAAM,UAAUE,UAAWC,IAAMC,GAAG,SAA5C,oBAIJ,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACGvF,EACC,mCACE,cAAC+E,EAAA,EAAD,CAAQC,MAAM,UAAUE,UAAWC,IAAMC,GAAG,UAA5C,sBAIA,KACJ,cAACN,EAAD,KAEE9E,GACA,cAAC+E,EAAA,EAAD,CAAQC,MAAM,UAAUE,UAAWC,IAAMC,GAAG,UAA5C,yB,aCvCK,SAASI,EAAT,GAAiC,IAAZtG,EAAW,EAAXA,SAClC,OACE,gCACE,iDACCA,EAASiC,KAAI,SAAAsE,GAAC,OACb,gCACE,yCAAYA,EAAEC,QACd,+CACA,6BACGD,EAAEnE,YAAYH,KAAI,SAAAC,GAAC,OAClB,6BAAiBA,EAAEC,MAAVD,EAAEuE,UAGf,6CAAgBF,EAAEhF,WAClB,4CAAegF,EAAE9E,aATT8E,EAAEhH,U,wDCKL,GAAE8D,MATN,uCAAG,WAAMC,GAAN,eAAA5E,EAAA,+EAEaC,IAAMS,KAAKb,mBAAkB+E,GAF1C,cAEJjE,EAFI,yBAGHA,EAASP,MAHN,gCAKViG,QAAQ2B,IAAI,KAAM7C,SALR,yDAAH,uDCgDI8C,MAhDM,WAA2B,IAA1BlG,EAAyB,uDAAjB,KAAMC,EAAW,uCAC7C,OAAQA,EAAOH,MACf,IAAK,cACH,OAAOG,EAAOkG,MAChB,IAAK,eACH,OAAO,KACT,QACE,OAAOnG,ICGLoG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJC,MAAO,OACPN,UAAWF,EAAMG,QAAQ,IAE3BM,OAAQ,CACNC,OAAQV,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASQ,IAEtB,IAAMtH,EAAWW,cAEX4G,EAAUd,IAJmB,EAKDe,cAA1BC,EAL2B,EAK3BA,aAAcC,EALa,EAKbA,QAMtB,OACE,eAACC,EAAA,EAAD,CAAW/B,UAAU,OAAOgC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWP,EAAQX,MAAxB,UACE,cAACmB,EAAA,EAAD,CAAYnC,UAAU,KAAKoC,QAAQ,KAAnC,qBAGA,uBACE/F,SAAUwF,GAbD,SAAA/I,GDpBZ,IAAewE,ECqBlBlD,GDrBkBkD,ECqBHxE,EDpBjB,uCAAO,WAAMsB,GAAN,eAAA1B,EAAA,sEACe2J,EAAahF,MAAMC,GADlC,cACCsD,EADD,OAGLpD,OAAOC,aAAaiB,QAAQ,cAAeC,KAAKC,UAAUgC,IAHrD,kBAKExG,EAAS,CACdG,KAAK,cACLqG,WAPG,2CAAP,2DCiCQsB,UAAWP,EAAQL,KAFrB,UAGE,cAAC,IAAD,CACEhF,KAAK,WACLwF,QAASA,EACTQ,aAAa,GACbC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEJ,QAAQ,WACRX,OAAO,SACPiB,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNC,aAAa,QACbC,WAAS,QAIf,cAAC,IAAD,CACExG,KAAK,WACLwF,QAASA,EACTQ,aAAa,GACbC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEI,MAAM,WACNrI,KAAK,WACL6H,QAAQ,WACRX,OAAO,SACPiB,UAAQ,EACRC,WAAS,EACTE,aAAa,yBAInB,cAAChD,EAAA,EAAD,CACEtF,KAAK,SACLoI,WAAS,EACTP,QAAQ,YACRtC,MAAM,UACNoC,UAAWP,EAAQH,OALrB,8B,0CC3EJX,GAAYC,YAAW,CAC3BiC,KAAM,CACJf,SAAU,KAEZgB,MAAO,CACLC,OAAQ,OAIG,SAASC,GAAT,GAAsC,IAAZlJ,EAAW,EAAXA,SACjC2H,EAAUd,KACV/D,EAAU,CAAEqG,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,WAExE,OACE,mCACGtJ,EAASiC,KAAI,SAAAsE,GAAC,OAEb,eAACgD,EAAA,EAAD,CAAiBrB,UAAWP,EAAQoB,KAAMS,MAAO,CAAE/B,OAAQ,IAA3D,UACE,cAACgC,EAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACvB,EAAA,EAAD,CAAYwB,cAAY,EAACvB,QAAQ,KAAKpC,UAAU,KAAhD,SACG,IAAI4D,KAAKrD,EAAEC,MAAMqD,mBAAmB,KAAK/G,KAE5C,eAACqF,EAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,gBAAgBE,UAAU,IAA5D,UACE,6BACGO,EAAEnE,YAAYH,KAAI,SAAAC,GAAC,OAClB,6BAAiBA,EAAEC,MAAVD,EAAEuE,UAHjB,aAMSF,EAAEhF,QANX,YAOQgF,EAAE9E,gBAId,eAACqI,GAAA,EAAD,WACE,cAACjE,EAAA,EAAD,CAAQkE,KAAK,QAAQjE,MAAM,UAA3B,qBAGA,cAACD,EAAA,EAAD,CAAQkE,KAAK,QAAQjE,MAAM,YAA3B,0BArBOS,EAAEhH,SCDrB,IA6EeyK,GA7EH,WAEV,IAAM5J,EAAWW,cACXD,EAAOoE,aAAY,SAAAzE,GAAK,OAAIA,EAAMK,QAClCd,EAAWkF,aAAY,SAAAzE,GAAK,OAAIA,EAAMT,YACtC4G,EAAQ1B,aAAY,SAAAzE,GAAK,OAAIA,EAAMmG,SACnCqD,EC/BD,SAA4BjK,GACjC,OAAOA,EAASkK,MAAK,SAACxL,EAAEyL,GAAH,OAAS,IAAIP,KAAKO,EAAE3D,MAAM,IAAIoD,KAAKlL,EAAE8H,SD8BnC4D,CAAmBpK,GAEvC4G,GAAOxG,EAASmD,KAEnB8G,qBAAU,WACR,IdH4BvK,EcGtBwK,EAAiB9G,OAAOC,aAAa8G,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAMxJ,EAAO6D,KAAK6F,MAAMF,GACxBlK,EXLC,SAAiBU,GAEtB,OADA+D,EAAalF,SAASmB,EAAKtC,OACpB,CACL+B,KAAM,QACNO,QWCW2J,CAAQ3J,IACjBV,GdP0BN,EcODgB,EAAKvB,GdNlC,uCAAO,WAAMa,GAAN,eAAA1B,EAAA,sEAEsBgM,EAAc7K,gBAAgBC,GAFpD,OAECa,EAFD,OAGLP,EAAS,CACPG,KAAK,gBACLI,iBALG,2CAAP,wDcSKiG,GAAOxG,EdnBZ,uCAAO,WAAMA,GAAN,eAAA1B,EAAA,sEACsB2B,EAAe5B,SADrC,OACCkC,EADD,OAELP,EAAS,CACPG,KAAK,gBACLI,iBAJG,2CAAP,yDcoBE,CAACP,EAASwG,IAEZ,IAAMvB,EAAgB,uCAAG,WAAOsF,GAAP,eAAAjM,EAAA,+EAEFgM,EAAc3L,OAAO4L,GAFnB,OAEfC,EAFe,OAGrBxK,EAASwD,EAAa,MAAD,OAAOgH,EAAI9L,KAAKwD,KAAhB,iCAAoD,IAHpD,gDAKrByC,QAAQD,MAAR,MALqB,yDAAH,sDAStB,OACE,qCACE,cAAC,EAAD,IACA,cAACa,EAAD,CAAQ7E,KAAMA,IAEd,cAACiH,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6C,KAAK,eAAZ,SACGjE,EAAM,cAAC,IAAD,CAAUV,GAAG,WAAY,cAACwB,EAAD,MAGlC,cAAC,IAAD,CAAOmD,KAAK,SAAS7E,UAAWkD,GAAhC,SACGtC,EAAO,cAACsC,GAAD,CAAgBlJ,SAAUA,IAAc,cAAC,IAAD,CAAUkG,GAAG,kBAG/D,cAAC,IAAD,CAAO2E,KAAK,UAAZ,SACE,cAAC,EAAD,CAAYxF,iBAAkBA,MAGhC,cAAC,IAAD,CAAOwF,KAAK,SAAZ,SACG/J,EAAO,cAAC,IAAD,CAAUoF,GAAE,mBAAcpF,EAAKvB,MAAW,cAAC,EAAD,CAAOuB,KAAMA,MAGjE,cAAC,IAAD,CAAO+J,KAAK,SAAZ,6BAIA,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACG/J,EACC,qCACE,cAAC,EAAD,CAAWA,KAAMA,IACjB,cAACwF,EAAD,CAAWtG,SAAUiK,OAErB,cAAC,IAAD,CAAU/D,GAAG,aAGnB,cAAC,IAAD,CAAO2E,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU3E,GAAG,sB,2BEnFnB4E,GAAUC,2BAAgB,CAC9BlH,QAASK,EACTpD,KAAK6C,EACL3D,SAAUQ,EACVoG,MAAOD,IAQMqE,GALDC,uBACZH,GACAI,+BAAoBC,2BAAgBC,QCXtCC,IAAS9C,OACP,cAAC,IAAD,CAAUyC,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.d2740d3c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/bookings'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async() => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization : token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async(id, newObject) => {\n  const response = await axios.put(`${ baseUrl }/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async(id) => {\n  const response = await axios.delete(`${ baseUrl }/${id}`)\n  return response.data\n}\n\nexport default { getAll,create,update,remove,setToken }","import axios from 'axios'\nconst baseUrl = '/api/clients'\n\nconst getAll = async() => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst getBookingsById = async clientId => {\n  const requst = await axios.get(baseUrl + `/${clientId}`)\n  return requst.data.bookings\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl }/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${ baseUrl }/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll,create,update,remove,getBookingsById }","import bookingService from '../services/booking'\nimport clientService from '../services/client'\n\nconst bookingReducer = (state=[],action) => {\n  switch (action.type) {\n  case 'INIT_BOOKINGS':\n    return action.initBookings\n  case 'NEW_BOOKING':\n    return state.concat(action.newBooking)\n  case 'CLEAR_BOOKINGS':\n    return []\n  default:\n    return state\n  }\n}\n\nexport function clearBookings(){\n  return{\n    type:'CLEAR_BOOKINGS'\n  }\n}\n\nexport function initBookingAll(){\n\n  return async dispatch => {\n    const initBookings = await bookingService.getAll()\n    dispatch({\n      type:'INIT_BOOKINGS',\n      initBookings\n    })\n  }\n}\n\nexport function initBookingById(clientId){\n  return async dispatch => {\n    // console.log(clientId)\n    const initBookings = await clientService.getBookingsById(clientId)\n    dispatch({\n      type:'INIT_BOOKINGS',\n      initBookings\n    })\n  }\n}\n\nexport function createBooking(booking){\n  return async dispatch => {\n    const newBooking = await bookingService.create(booking)\n    dispatch({\n      type:'NEW_BOOKING',\n      newBooking\n    })\n  }\n}\n\nexport default bookingReducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createBooking } from '../reducers/bookingReducer'\nimport Autocomplete from 'react-google-autocomplete'\n\n\nconst QuoteForm = ({ user }) => {\n\n  const dispatch = useDispatch()\n\n  const [islLawnMowing, setIslLawnMowing] = useState(false)\n  const [isGardening, setIsGardening] = useState(false)\n  const [isRubbishRemove, setIsRubbishRemove] = useState(false)\n  const [comment, setComment] = useState('')\n  const [address, setAddress] = useState('')\n\n  const submitQuote = async (event) => {\n    event.preventDefault()\n\n    const serviceSelected = [\n      islLawnMowing && 'Lawn mowing',\n      isGardening && 'Gardening',\n      isRubbishRemove && 'Rubbish Removal',\n    ]\n      .filter(Boolean)\n      .map((i) => ({ item: i }))\n\n    // console.log(address)\n\n    const booking ={\n      serviceItem: serviceSelected,\n      comment,\n      address,\n    }\n\n    dispatch( createBooking(booking))\n    setComment('')\n    setAddress('')\n    setIslLawnMowing(false)\n    setIsGardening(false)\n    setIsRubbishRemove(false)\n  }\n\n  return (\n    <>\n      <h2>New Booking</h2>\n      <form onSubmit={submitQuote}>\n        <div>\n          <p>choice service</p>\n          <ul>\n            <li>\n              <label>\n                lawn mowing\n                <input\n                  name=\"lawn_mowing\"\n                  type=\"checkbox\"\n                  checked={islLawnMowing}\n                  onChange={() => setIslLawnMowing(!islLawnMowing)}\n                />\n              </label>\n            </li>\n\n            <li>\n              <label>\n                Gardening and landscaping\n                <input\n                  name=\"gardening\"\n                  type=\"checkbox\"\n                  checked={isGardening}\n                  onChange={() => setIsGardening(!isGardening)}\n                />\n              </label>\n            </li>\n\n            <li>\n              <label>\n                Rubbish Removal\n                <input\n                  name=\"rubbish_removal\"\n                  type=\"checkbox\"\n                  checked={isRubbishRemove}\n                  onChange={() => setIsRubbishRemove(!isRubbishRemove)}\n                />\n              </label>\n            </li>\n          </ul>\n        </div>\n\n        <div>\n          Service at\n          <Autocomplete apiKey={user.googleApiKey}\n            onPlaceSelected={(place) => setAddress(place.formatted_address)}\n            options={{\n              types: ['address'],\n              fields: ['formatted_address'],\n              componentRestrictions: { country: 'nz' },\n            }}\n          />\n        </div>\n\n        <div>\n          comment\n          <input\n            value={comment}\n            onChange={({ target }) => setComment(target.value)}\n          />\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  )\n}\n\nexport default QuoteForm\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\nimport quoteService from '../services/booking'\n\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.user\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport function login(credentials){\n  return async dispatch => {\n    const user = await loginService.login(credentials)\n    window.localStorage.setItem('loggedUser', JSON.stringify(user))\n    quoteService.setToken(user.token)\n    return dispatch({\n      type:'LOGIN',\n      user\n    })\n  }\n}\n\nexport function logout(){\n  window.localStorage.clear()\n  return {\n    type: 'LOGOUT'\n  }\n}\n\nexport function setUser(user){\n  quoteService.setToken(user.token)\n  return {\n    type: 'LOGIN',\n    user\n  }\n}\n\n\nexport default userReducer","const noticeReducer = ( state = null, action ) => {\n  switch ( action.type ) {\n  case 'SET_MESSAGE':\n    return action.message\n  default:\n    return state\n  }\n}\n\nlet timer\nexport const showMesssage = ( message, duration ) => {\n\n  return dispatch => {\n    dispatch({\n      type: 'SET_MESSAGE',\n      message\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type:'SET_MESSAGE',\n        message:null\n      })\n    },duration*1000)\n    clearTimeout(timer)\n  }\n}\n\nexport default noticeReducer","import { React, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../reducers/loginReducer'\nimport { showMesssage } from '../reducers/noticeReducer'\n\nconst Login = () => {\n\n  const dispatch = useDispatch()\n\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = ({ ...credentials }) => {\n    try {\n      dispatch(login(credentials))\n      dispatch(showMesssage('Great!You logged in!',5))\n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return(\n    <>\n      <h2>Login</h2>\n      <form onSubmit={(evt) => {\n        evt.preventDefault()\n        handleLogin({ username,password })\n      }}>\n        <div>\n          username: <input\n            value = {username}\n            onChange ={({ target }) => setUsername(target.value)}/>\n        </div>\n\n        <div>\n          password: <input\n            value = {password}\n            onChange ={({ target }) => setPassword(target.value)}/>\n        </div>\n        <button>login</button>\n      </form>\n\n    </>\n  )\n}\n\nexport default Login","import { React } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification =() => {\n  const message = useSelector(states => states.message)\n  return(\n    <>\n      {message}\n    </>\n  )\n}\n\nexport default Notification","import { React, useState } from 'react'\n\nconst SignupForm = ({ handleCreateUser }) => {\n\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n\n\n\n  return(\n    <>\n      <h2>Sign up</h2>\n\n      <form onSubmit={(evt) => {\n        evt.preventDefault()\n        handleCreateUser({ username,password,name,address,phone,email })\n      }}>\n\n        <div>\n      username:\n          <input\n            value = {username}\n            onChange ={({ target }) => setUsername(target.value)}\n          />\n        </div>\n\n        <div>\n      password:\n          <input\n            value = {password}\n            onChange ={({ target }) => setPassword(target.value)}\n          />\n        </div>\n\n        <div>\n      name:\n          <input\n            value = {name}\n            onChange ={({ target }) => setName(target.value)}\n          />\n        </div>\n\n        <div>\n      address:\n          <input\n            value = {address}\n            onChange ={({ target }) => setAddress(target.value)}\n          />\n        </div>\n\n        <div>\n      phone:\n          <input\n            value = {phone}\n            onChange ={({ target }) => setPhone(target.value)}\n          />\n        </div>\n\n        <div>\n      email:\n          <input\n            value = {email}\n            onChange ={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <button>sign up</button>\n      </form>\n\n    </>\n  )\n}\n\nexport default SignupForm","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Toolbar, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport { showMesssage } from '../reducers/noticeReducer'\nimport { clearBookings } from '../reducers/bookingReducer'\n\nexport default function Navbar({ user }) {\n\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(logout())\n    dispatch(clearBookings())\n    dispatch(showMesssage('Great!You logged out!',5))\n  }\n\n  const LoginOutBtn = () =>\n    user ? (\n      <Button color=\"inherit\" onClick={() => handleLogout()}>\n        logout\n      </Button>\n    ) : (\n      <Button color=\"inherit\" component={Link} to=\"/login\">\n        login\n      </Button>\n    )\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {user ? (\n          <>\n            <Button color=\"inherit\" component={Link} to=\"/quotes\">\n              quotes\n            </Button>\n          </>\n        ) : null}\n        <LoginOutBtn />\n\n        {!user && (\n          <Button color=\"inherit\" component={Link} to=\"/signup\">\n            signup\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react'\n\nexport default function QuoteList({ bookings }){\n  return(\n    <div>\n      <h2>Booking history</h2>\n      {bookings.map(q => (\n        <div key={q.id}>\n          <h4>Date : {q.date}</h4>\n          <h4>Service items</h4>\n          <ul>\n            {q.serviceItem.map(i => (\n              <li key={i._id}>{i.item}</li>\n            ))}\n          </ul>\n          <div>comments: {q.comment}</div>\n          <div>address: {q.address}</div>\n        </div>\n      ))}\n    </div>\n  )\n}","import axios from 'axios'\nconst baseUrl = '/api/admin'\n\nconst login = async credentials => {\n  try {\n    const response = await axios.post(baseUrl+'/login', credentials)\n    return response.data\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport default { login }","import adminService from '../services/admin'\n\n\nconst adminReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN_ADMIN':\n    return action.admin\n  case 'LOGOUT_ADMIN':\n    return null\n  default:\n    return state\n  }\n}\n\n\nexport function login(credentials){\n  return async dispatch => {\n    const admin = await adminService.login(credentials)\n\n    window.localStorage.setItem('loggedAdmin', JSON.stringify(admin))\n\n    return dispatch({\n      type:'LOGIN_ADMIN',\n      admin\n    })\n  }\n}\n\nexport function setAdmin(loggedUserJSON){\n  const admin = JSON.parse(loggedUserJSON)\n  return {\n    type: 'LOGIN_ADMIN',\n    admin\n  }\n}\n\nexport function logout(){\n  return {\n    type: 'LOGOUT_ADMIN'\n  }\n}\n\nexport function setUser(loggedUserJSON){\n  const user = JSON.parse(loggedUserJSON)\n  return {\n    type: 'LOGIN_ADMIN',\n    user\n  }\n}\n\n\nexport default adminReducer","import React from 'react'\nimport { useForm,Controller } from 'react-hook-form'\n\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../reducers/adminReducer'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function AdminLogin() {\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const { handleSubmit, control } = useForm()\n  const onSubmit = data => {\n    dispatch(login(data))\n  }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className={classes.form}>\n          <Controller\n            name=\"username\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) =>\n              <TextField\n                {...field}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Username\"\n                autoComplete=\"email\"\n                autoFocus\n              />}\n          />\n\n          <Controller\n            name=\"password\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) =>\n              <TextField\n                {...field}\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                autoComplete=\"current-password\"\n              />}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n})\n\nexport default function AdminDashboard({ bookings }){\n  const classes = useStyles()\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n\n  return(\n    <>\n      {bookings.map(q => (\n\n        <Card key={q.id} className={classes.root} style={{ margin: 20 }}>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                {new Date(q.date).toLocaleDateString('nz',options)}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <ul>\n                  {q.serviceItem.map(i => (\n                    <li key={i._id}>{i.item}</li>\n                  ))}\n                </ul>\n            comments: {q.comment}\n            address: {q.address}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n        Approve\n            </Button>\n            <Button size=\"small\" color=\"secondary\">\n        Decline\n            </Button>\n          </CardActions>\n        </Card>\n      ))}\n\n\n\n    </>\n  )\n}\n\n{/* <div key={q.id}>\n<h4>Date : {q.date}</h4>\n<h4>Service items</h4>\n<ul>\n  {q.serviceItem.map(i => (\n    <li key={i._id}>{i.item}</li>\n  ))}\n</ul>\n<div>comments: {q.comment}</div>\n<div>address: {q.address}</div>\n</div> */}","/* eslint-disable no-unused-vars */\nimport { React, useEffect } from 'react'\nimport QuoteFrom from './components/BookingForm'\nimport Login from './components/Login'\nimport Notification from './components/Notification'\nimport SignupForm from './components/SignupForm'\nimport clientService from './services/client'\n\nimport {\n  Switch,\n  Route,\n  Redirect,\n  // useRouteMatch\n} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport { Container } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { showMesssage } from './reducers/noticeReducer'\nimport QuoteList from './components/BookingList'\nimport { sortBookingsByDate } from './helpers/sortHelper'\nimport { initBookingAll, initBookingById } from './reducers/bookingReducer'\nimport { logout, setUser } from './reducers/loginReducer'\nimport AdminLogin from './components/AdminLogin'\nimport AdminDashboard from './components/AdminDashboard'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const bookings = useSelector(state => state.bookings)\n  const admin = useSelector(state => state.admin)\n  const sortedBookings = sortBookingsByDate(bookings)\n\n  if(admin) dispatch(logout())\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      dispatch(initBookingById(user.id))\n    }\n\n    if(admin) dispatch(initBookingAll())\n  },[dispatch,admin])\n\n  const handleCreateUser = async (userObj) => {\n    try {\n      const res =  await clientService.create(userObj)\n      dispatch(showMesssage(`hi ${res.data.name} you are signed up, login pls`,5))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <>\n      <Notification />\n      <Navbar user={user} />\n\n      <Container maxWidth=\"sm\">\n        <Switch>\n          <Route path=\"/admin/login\">\n            {admin?<Redirect to=\"/admin\" />:<AdminLogin />}\n          </Route>\n\n          <Route path=\"/admin\" component={AdminDashboard}>\n            {admin? <AdminDashboard bookings={bookings} />: <Redirect to=\"admin/login\" />}\n          </Route>\n\n          <Route path=\"/signup\">\n            <SignupForm handleCreateUser={handleCreateUser} />\n          </Route>\n\n          <Route path=\"/login\">\n            {user ? <Redirect to={`/clients/${user.id}`} /> : <Login user={user} />}\n          </Route>\n\n          <Route path=\"/quote\">\n            some quote form\n          </Route>\n\n          <Route path=\"/clients/:id\">\n            {user ?\n              <>\n                <QuoteFrom user={user}/>\n                <QuoteList bookings={sortedBookings} />\n              </>\n              : <Redirect to=\"/login\" />}\n          </Route>\n\n          <Route path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\n\nexport default App\n","export function sortBookingsByDate(bookings){\n  return bookings.sort((a,b) => new Date(b.date)-new Date(a.date))\n}","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport noticeReducer from './reducers/noticeReducer'\nimport userReducer from './reducers/loginReducer'\nimport bookingReducer from './reducers/bookingReducer'\nimport adminReducer from './reducers/adminReducer'\n\n\nconst reducer = combineReducers({\n  message: noticeReducer,\n  user:userReducer,\n  bookings: bookingReducer,\n  admin: adminReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport {  BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}